server.port =8085
spring.application.name=jobservice
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=anshul100
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG
spring.jpa.properties.hibernate.ogm.datastore.create_database=true


failure.code=1
success.code=0
default.exception.code=500
job.posted.successfully=Job posted successfully
invalid.data=Invalid data
no.job.posting.found=No job posting found
job.posting.updated.successfully=Job posting updated successfully


job.application.successfull= You applied to the job successfully.
no.job.application.found= No job application found.
job.application.updated=Job application updated successfully

updated.resume.and.cover.letter.be.in.proper.format=Updated resume and cover letter should be in proper format.
job.does.not.exist=Job for which you want to apply does not exist.Kindly apply to another one.
already.applied=Hey, you have already applied to this job.
already.accepted= You are job application is already accepted by employer.They will connect with you soon.


job.posting.fetched.successfully= Job postings fetched successfully.
job.application.fetched.successfully= Job applications fetched successfully.
company.saved.successfully=Company saved successfully
no.comapny.found=No company found.
company.fetched.successfully=Companies fetched successfully.
company.name.not.null.and.empty=Company name cannot be null and empty.

job.application.accepted.email.message=Hi, your job application with id :{0}, job posting id : {1}, for company :{2} has been accepted for any query you can contact to :{3}.
job.application.rejected.email.message=Hi, your job application with id :{0}, job posting id : {1}, for company :{2} has been rejected for any query you can contact to :{3}.
applied.to.job.email.message=Hi, {0} applied to your job posting, which has job application id :{1}, job posting id :{2}  company name like :{3} and position :{4}.You can accept or reject the same. 


eureka.client.service-url.defaultZone  = http://eurekaserver:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry =true

